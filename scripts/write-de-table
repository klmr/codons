#!/usr/bin/env Rscript

library(modules, warn.conflicts = FALSE, quietly = TRUE)
sys = import('sys')

write_de_result = function (filename, results) {
    io = import('ebits/io')
    io$write_table(results[order(results$padj), ], filename, row.names = TRUE)
}

sys$run({
    args = sys$cmdline$parse(arg('species', 'the species'),
                             arg('type', 'the type (“mrna” or “trna”)',
                                 validate = function (x) x %in% c('mrna', 'trna')),
                             arg('prefix', 'the output path prefix'))

    config = import(paste('../config', args$species, sep = '_'))
    data = import('../data')
    load_data = function (type)
        data[[paste(args$type, type, sep = '_')]](config)

    counts = load_data('counts')
    design = load_data('design')

    de = import('de')
    de_genes = de$de_genes(counts, design, config$contrasts)
    names = paste0(args$prefix,
                   'de-genes-',
                   args$species,
                   '-',
                   args$type,
                   '-',
                   gsub('/', '-vs-', names(de_genes)),
                   '.tsv')

    for (i in seq_along(de_genes))
        write_de_result(names[[i]], de_genes[[i]])

    NULL
})

# vim: ft=r
