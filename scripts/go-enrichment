#!/usr/bin/env Rscript

library(modules, warn.conflicts = FALSE, quietly = TRUE)
sys = import('sys')

sys$run({
    args = sys$cmdline$parse(opt('a', 'alpha', 'significance threshold for enrichment', 0.001),
                             arg('species', 'the species'),
                             arg('outfile', 'the output filename'))

    base = import('ebits/base')
    data = import('../data')
    config = import(paste('../config', args$species, sep = '_'))

    mrna_counts = data$mrna_counts(config)
    mrna_design = data$mrna_design(config)
    go_genes = data$go_genes(config)

    gsa = import('./gsa')
    go_genes_piano = gsa$prepare_gene_set(go_genes)

    parallel = import_package('parallel')
    result = parallel$mclapply(config$contrasts, gsa$gsa_de,
                               data = mrna_counts,
                               col_data = mrna_design,
                               go_genes = go_genes_piano,
                               mc.cores = parallel$detectCores())

    get_top_genes = function (result, direction)
        gsa$enriched_terms(result, direction, alpha = args$alpha)

    get_enrichment = function (result, contrast) {
        names = sapply(c(identity, rev),
                       f -> paste(f(contrast), collapse = '/'))
        lapply(c('up', 'down'), get_top_genes, result = result) %>%
            setNames(names)
    }

    result = Map(get_enrichment, result, config$contrasts) %>%
        unlist(recursive = FALSE)

    saveRDS(result, args$outfile)
    NULL
})

# vim: ft=r
